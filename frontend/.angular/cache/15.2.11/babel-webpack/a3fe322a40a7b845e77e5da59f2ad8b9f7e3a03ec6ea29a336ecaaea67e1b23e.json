{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let WebSocketService = /*#__PURE__*/(() => {\n  class WebSocketService {\n    constructor() {\n      this.websocket = null;\n      this.isConnected = false;\n      this.messageQueue = []; // Messages waiting to send after connection opens\n    }\n\n    connect() {\n      this.websocket = new WebSocket('ws://localhost:8000/ws/transactions/');\n      this.websocket.onopen = () => {\n        console.log('WebSocket connected');\n        this.isConnected = true;\n        // Send any queued messages\n        while (this.messageQueue.length > 0) {\n          const msg = this.messageQueue.shift();\n          if (msg) {\n            this.websocket.send(msg);\n          }\n        }\n      };\n      this.websocket.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n      this.websocket.onclose = event => {\n        console.log('WebSocket closed:', event);\n        this.isConnected = false;\n        this.websocket = null;\n      };\n      this.websocket.onmessage = event => {\n        console.log('WebSocket message:', event.data);\n        // You can emit this to subscribers here if needed\n      };\n    }\n\n    sendMessage(message) {\n      if (this.isConnected && this.websocket) {\n        this.websocket.send(message);\n      } else {\n        console.warn('WebSocket not connected. Queuing message.');\n        this.messageQueue.push(message);\n      }\n    }\n  }\n  WebSocketService.ɵfac = function WebSocketService_Factory(t) {\n    return new (t || WebSocketService)();\n  };\n  WebSocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WebSocketService,\n    factory: WebSocketService.ɵfac,\n    providedIn: 'root'\n  });\n  return WebSocketService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}